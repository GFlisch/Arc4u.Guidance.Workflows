name: Build a Docker image

on: 
  workflow_call:
    inputs:
      DockerContainer:
        description: 'Docker container used to store the images'
        required: true
        type: string    
      DockerImage:
        description: 'Docker image name use to store in a container with no version Tag'
        required: true
        type: string
      DockerImageTagVersion:
        description: 'version Tag'
        required: true
        type: string     
      DockerEnvironmentTagVersion:
        description: 'Environment Tag: Dev - Test - Acc - Prod'
        required: true
        type: string            
      Registry:
        description: 'Name of the container registry'     
        required: true
        type: string
    secrets:
      CR_User:
        required: true
      CR_Password:
        required: true
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
     fullImagePath: ${{ steps.imageTag.outputs.fullImagePath }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact

      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: configs
          path: |
            ./Service/Configs
            ./deploy.yml
          retention-days: 90
          
      - name: Remove Folder
        uses: JesseTG/rm@v1.0.3
        with:
          path: ./Service/Configs
  
      - name: Ensure DockerImage name is in lower case!
        run: echo "::set-output name=DockerImage::$(echo ${{ inputs.DockerImage }} | tr [:upper:] [:lower:])"
        id: DockerImageToLower

      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.Registry }}
          username: ${{ secrets.CR_User }}
          password: ${{ secrets.CR_Password }}

      - name: Build and publish the docker image.
        run: |
          docker build ./Service -f ./Dockerfile -t ${{ format('{0}_{1}', steps.DockerImageToLower.outputs.DockerImage, inputs.DockerImageTagVersion) }}
          docker push ${{ format('{0}_{1}', steps.DockerImageToLower.outputs.DockerImage, inputs.DockerImageTagVersion) }} 

      - name: Docker Login
        uses: actions-hub/docker/login@master
        env:
          DOCKER_REGISTRY_URL: ${{ inputs.DockerContainer }}
          DOCKER_USERNAME: ${{ secrets.CR_User }}
          DOCKER_PASSWORD: ${{ secrets.CR_Password }}

      - name: Tag built container with Azure Container Registry url
        uses: actions-hub/docker/cli@master
        with:
          args: tag ${{ format('{0}_{1}', steps.DockerImageToLower.outputs.DockerImage, inputs.DockerImageTagVersion) }}  ${{ format('{0}_{1}', steps.DockerImageToLower.outputs.DockerImage, inputs.DockerEnvironmentTagVersion) }}
 
      - name: Push built container to Azure Container Registry
        uses: actions-hub/docker/cli@master
        with:
          args: push ${{ format('{0}_{1}', steps.DockerImageToLower.outputs.DockerImage, inputs.DockerEnvironmentTagVersion) }}
